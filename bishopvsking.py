# -*- coding: utf-8 -*-
"""THE5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wiE9aLnWb_f6fk7i2kDUhi23M_9HsXmO
"""

#input and check
board=input("Enter the board layout: ")
correct=False
while correct==False:
  if "K" in board and "B" in board:
    correct=True
  else:
    print("Missing pieces!")
    correct=False
    board=input("Enter the board layout: ")

#8 rows and 8 columns + output prep
layout=board.split(";")
gridlinedash="-----------------"
gridlinesq=["|"," ","|"," ","|"," ","|"," ","|"," ","|"," ","|"," ","|"," ","|"]



#finding row of b
findb=board.replace(";",",")
findb=board.split(",")
bindex=board.find("B")


#make 2d array
newboard=[]
for i in range(8):
  layout[i]=layout[i].split(",")
  newboard.append(layout[i])


#finding index of k and b in row
for i in range(8):
  for j in range(8):
    if newboard[i][j]=="B":
      bpos=j
      brow=i
    if newboard[i][j]=="K":
      kpos=j
      krow=i



# above b
k = 0
attack = False
for i in range(1, brow + 1):
    if bpos + i < 8:
        if newboard[brow - i][bpos + i] != "K":
            newboard[brow - i][bpos + i] = "+"
        else:
            attack = True
            break
    else:
        break

for i in range(1, brow + 1):
    if bpos - i >= 0:
        if newboard[brow - i][bpos - i] != "K":
            newboard[brow - i][bpos - i] = "+"
        else:
            attack = True
            break
    else:
        break

#under b
k=0
for i in range(1,8-brow):
  try:
    if newboard[brow+i][bpos+i]!="K":
      newboard[brow+i][bpos+i]="+"
    else:
      attack=True
      break
  except IndexError:
    k+=1
for i in range(1,brow+1):
  try:
    if newboard[brow+i][bpos-i]!="K":
      newboard[brow+i][bpos-i]="+"
    else:
      attack=True
      break
  except IndexError:
    k+=1

#under b
k=0
for i in range(1,8-brow):
  try:
    if newboard[brow+i][bpos+i]!="K":
      newboard[brow+i][bpos+i]="+"
    else:
      attack=True
      break
  except IndexError:
    k+=1
for i in range(1,brow+1):
  try:
    if newboard[brow+i][bpos-i]!="K":
      newboard[brow+i][bpos-i]="+"
    else:
      attack=True
      break
  except IndexError:
    k+=1


for i in range(8):
  for j in range(8):
    if newboard[i][j]=="@":
      newboard[i][j]=" "


#printing board
print(gridlinedash)
for i in range(8):
  print("|",end='')
  for j in range(8):
    print(newboard[i][j]+"|",end='')
  print()
  print(gridlinedash)

if attack==True:
  print("The bishop can attack the king")
else:
  print("The king is safe")